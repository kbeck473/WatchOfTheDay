# docker-compose.yml  (remove the `version:` line)
services:
  db:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: watchdb
      POSTGRES_USER: watchuser
      POSTGRES_PASSWORD: watchpass
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 2s
      timeout: 5s
      retries: 15

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      PGHOST: db
      PGUSER: watchuser
      PGPASSWORD: watchpass
      PGDATABASE: watchdb
      PGPORT: 5432
      NODE_ENV: production
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "5000:5000"

  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile

    # Make stops reliable
    init: true                 # tini as PID 1 for proper signal handling
    stop_signal: SIGQUIT       # nginx-friendly graceful quit
    stop_grace_period: 10s
    restart: "no"              # avoid auto-restart loops during shutdown

    depends_on:
      api:
        condition: service_started
    ports:
      - "3000:80"

    # Healthcheck with hard timeout (busybox wget supports -T)
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- -T 2 http://localhost || exit 1"]
      interval: 30s
      timeout: 3s
      retries: 3

    # Use long syntax tmpfs mounts (robust across Compose versions)
    volumes:
      - type: tmpfs
        target: /var/cache/nginx
      - type: tmpfs
        target: /var/run

  seed:
    image: postgres:16-alpine
    depends_on:
      db:
        condition: service_healthy
    environment:
      PGPASSWORD: watchpass
    volumes:
      - ./backend/seed.sql:/seed.sql:ro
    command: >
      sh -c "psql -h db -U watchuser -d watchdb -v ON_ERROR_STOP=1 -f /seed.sql"
    restart: "no"

volumes:
  db-data:
